//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTemplate.Client
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TechnicalError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
    public partial class TechnicalError : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
    public partial class BusinessError : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.wcftemplate.jmj/wcf/template/1", ConfigurationName="WCFTemplate.Client.ServiceTemplateContract")]
    public interface ServiceTemplateContract
    {
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (OperationRequest) du message OperationRequest ne correspond pas à la valeur par défaut (Operation)
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/Operation", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/OperationR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.TechnicalError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/OperationT" +
            "echnicalErrorFault", Name="TechnicalError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.BusinessError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/OperationB" +
            "usinessErrorFault", Name="BusinessError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        WCFTemplate.Client.OperationResponse Operation(WCFTemplate.Client.OperationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/Operation", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/OperationR" +
            "esponse")]
        System.Threading.Tasks.Task<WCFTemplate.Client.OperationResponse> OperationAsync(WCFTemplate.Client.OperationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stake", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stakeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.TechnicalError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stakeTechnicalErrorFault", Name="TechnicalError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.BusinessError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stakeBusinessErrorFault", Name="BusinessError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void BusinessMistake();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stake", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/BusinessMi" +
            "stakeResponse")]
        System.Threading.Tasks.Task BusinessMistakeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istake", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istakeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.TechnicalError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istakeTechnicalErrorFault", Name="TechnicalError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTemplate.Client.BusinessError), Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istakeBusinessErrorFault", Name="BusinessError", Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void TechnicalMistake();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istake", ReplyAction="http://services.wcftemplate.jmj/wcf/template/1/ServiceTemplateContract/TechnicalM" +
            "istakeResponse")]
        System.Threading.Tasks.Task TechnicalMistakeAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
    public partial class OperationIn
    {
        
        private string inputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Input
        {
            get
            {
                return this.inputField;
            }
            set
            {
                this.inputField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.wcftemplate.jmj/wcf/template/1")]
    public partial class OperationOut
    {
        
        private string outputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Output
        {
            get
            {
                return this.outputField;
            }
            set
            {
                this.outputField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OperationRequest", WrapperNamespace="http://services.wcftemplate.jmj/wcf/template/1", IsWrapped=true)]
    public partial class OperationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.wcftemplate.jmj/wcf/template/1", Order=0)]
        public WCFTemplate.Client.OperationIn OperationIn;
        
        public OperationRequest()
        {
        }
        
        public OperationRequest(WCFTemplate.Client.OperationIn OperationIn)
        {
            this.OperationIn = OperationIn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OperationResponse", WrapperNamespace="http://services.wcftemplate.jmj/wcf/template/1", IsWrapped=true)]
    public partial class OperationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.wcftemplate.jmj/wcf/template/1", Order=0)]
        public WCFTemplate.Client.OperationOut OperationOut;
        
        public OperationResponse()
        {
        }
        
        public OperationResponse(WCFTemplate.Client.OperationOut OperationOut)
        {
            this.OperationOut = OperationOut;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceTemplateContractChannel : WCFTemplate.Client.ServiceTemplateContract, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceTemplateContractClient : System.ServiceModel.ClientBase<WCFTemplate.Client.ServiceTemplateContract>, WCFTemplate.Client.ServiceTemplateContract
    {
        
        public ServiceTemplateContractClient()
        {
        }
        
        public ServiceTemplateContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServiceTemplateContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceTemplateContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServiceTemplateContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTemplate.Client.OperationResponse WCFTemplate.Client.ServiceTemplateContract.Operation(WCFTemplate.Client.OperationRequest request)
        {
            return base.Channel.Operation(request);
        }
        
        public WCFTemplate.Client.OperationOut Operation(WCFTemplate.Client.OperationIn OperationIn)
        {
            WCFTemplate.Client.OperationRequest inValue = new WCFTemplate.Client.OperationRequest();
            inValue.OperationIn = OperationIn;
            WCFTemplate.Client.OperationResponse retVal = ((WCFTemplate.Client.ServiceTemplateContract)(this)).Operation(inValue);
            return retVal.OperationOut;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFTemplate.Client.OperationResponse> WCFTemplate.Client.ServiceTemplateContract.OperationAsync(WCFTemplate.Client.OperationRequest request)
        {
            return base.Channel.OperationAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFTemplate.Client.OperationResponse> OperationAsync(WCFTemplate.Client.OperationIn OperationIn)
        {
            WCFTemplate.Client.OperationRequest inValue = new WCFTemplate.Client.OperationRequest();
            inValue.OperationIn = OperationIn;
            return ((WCFTemplate.Client.ServiceTemplateContract)(this)).OperationAsync(inValue);
        }
        
        public void BusinessMistake()
        {
            base.Channel.BusinessMistake();
        }
        
        public System.Threading.Tasks.Task BusinessMistakeAsync()
        {
            return base.Channel.BusinessMistakeAsync();
        }
        
        public void TechnicalMistake()
        {
            base.Channel.TechnicalMistake();
        }
        
        public System.Threading.Tasks.Task TechnicalMistakeAsync()
        {
            return base.Channel.TechnicalMistakeAsync();
        }
    }
}
